library(RAutoDiff)
library(RAutoDiff)
LUdecomp(diag(independent(c(1,2,3))))
LUdecomp(diag(independent2(c(1,2,3))))
library(RAutoDiff)
LUdecomp(diag(independent2(c(1,2,3))))
A <- diag(independent(3)) + matrix(rnorm(9),3)
A <- diag(independent(c(1,2,3)) + matrix(rnorm(9),3)
)
A <- diag(independent(c(1,2,3))) + matrix(rnorm(9),3)
A
LUdecomp(diag(independent2(c(1,2,3))))
library(RAutoDiff)
LUdecomp(diag(independent2(c(1,2,3))))
library(RAutoDiff)
LUdecomp(diag(independent2(c(1,2,3))))
LUdecomp(diag(independent2(c(1,2,3)))+matrix(randn(9)))
LUdecomp(diag(independent2(c(1,2,3)))+matrix(randn(9),3))
LUdecomp(diag(independent2(c(1,2,3)))+matrix(rnorm(9),3))
library(RAutoDiff)
LUdecomp()
diag(independent2(c(1,2,3)))+matrix(rnorm(9),3)
A<-diag(independent2(c(1,2,3)))+matrix(rnorm(9),3)
A
LUdecomp(A)
library(RAutoDiff)
LUdecomp(A)
library(RAutoDiff)
LUdecomp(A)
f <- LUdecomp(A)
f$L %*% f$U
f$L %*% f$U- A
A<-diag(independent2(c(1,2,3)))+matrix(rnorm(9),3)
f <- LUdecomp(A)
f$L %*% f$U- A
f$L@vals
library(RAutoDiff)
A
A%*%solve(A,c(1,2,3))
A%*%solve(A,matrix(c(1,2,3),3))
A%*%solve(A,matrix(c(1,2,3),3))@vals
(A%*%solve(A,matrix(c(1,2,3),3)))@vals
f$L %*% f$U- A
A%*%solve(A,matrix(c(1,2,3),3))@vals
(A%*%solve(A,matrix(c(1,2,3),3)))@vals
ncol(numeric(3))
ncol(numeric(3))==1
is.vector(numeric(3))
is.numeric(numeric(3))
ncol(numeric(3))==1 || TRUE
ncol(numeric(3))==1 && TRUE
A%*%solve(A,c(1,2,3))
ncol(numeric(3))>1 || TRUE
ncol(numeric(3))>1 || TRUE
A
class(A)
class(A)[1]
A%*%solve(A)
A<-diag(independent1(c(1,2,3)))+matrix(rnorm(9),3)
A<-diag(independent(c(1,2,3)))+matrix(rnorm(9),3)
A%*%solve(A)
solve(value(A))
solve((A))
solve(matrix(rep(A[1,1],9),3)
)
A
solve(matrix(rep.int(A[1,1],9),3)
)
solve(matrix(rep.int(A[1,1],9)+rnorm(9),3)
)
solve((A))
solve(value(A))
?det
?product
?prod
showMethods("prod")
library(RAutoDiff)
A
determinant(A)
determinant(value(A))
det(value(A))
determinant(A,logarithm = F)
?det
library(RAutoDiff)
det(A)
A<-diag(independent2(c(1,2,3)))+matrix(rnorm(9),3)
det(A)
source('~/Dropbox/work/RAutoDiff/examples/mle_iid_normal.R')
source('~/Dropbox/work/RAutoDiff/examples/multivariate_normal.R')
setwd("~/Dropbox/work/RAutoDiff/examples")
n <- 100
p <- 3
x <- cbind(rep(1,n),matrix(rnorm(n*(p-1)),n))
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
x
library(RAutoDiff)
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
opt
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
opt
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
par.lm
par.lm$coefficients
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
par.lm
par
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
hessian
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
dim(true.beta.hess)
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
print(system.time(n.log.like(par)))
print(system.time(gr(par)))
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
print(system.time(for(i in 1:10) n.log.like(par)))
print(system.time(gr(par)))
print(system.time(he(par)))
source('~/Dropbox/work/RAutoDiff/examples/lin_reg.R')
library(RAutoDiff)
example("indpendent")
example("indpendent","RAutoDiff")
example("independent")
example("independent2")
library(RAutoDiff)
example("independent2")
library(RAutoDiff)
library(RAutoDiff)
library(RAutoDiff)
library(RAutoDiff)
example("independent2")
library(RAutoDiff)
?gradient
library(RAutoDiff)
?determinant
?`determinant,AD_matrix-method`
source('~/Dropbox/work/RAutoDiff/package/RAutoDiff/R/solve.R')
library(RAutoDiff)
?`det,AD_matrix-method`
library(RAutoDiff)
?`solve,AD_matrix,ANY-method`
library(RAutoDiff)
?`solve,matrix,ADtype-method`
source('~/Dropbox/work/covid_surg/git_code/COVID19_surgery_risk/make_surg_rates.R')
setwd("~/Dropbox/work/covid_surg/git_code/COVID19_surgery_risk")
source('~/Dropbox/work/covid_surg/git_code/COVID19_surgery_risk/make_surg_rates.R')
pops
pops
setwd("~/Dropbox/work/RAutoDiff/package/RAutoDiff")
library(RAutoDiff)
library(RAutoDiff)
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
setwd("~/Dropbox/work/RAutoDiff/examples")
target.grad(c(0,0))
target.grad(c(0,1))
target.grad(c(0,2))
target.grad(c(-1,2))
??rmvnorm
?deSolve::lsoda
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
eventfun(0,y0,NULL)
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
output
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
# second order moments
E2 <- output[out.l,9:11]/Tmax
print(matrix(E2[c(1,2,2,3)],2))
plot(output[,9])
plot(output[,9]/output[,1])
plot(output[,2],output[,3],type="l")
plot(output[,2]^2,type="l")
E2
out.l
output
dim(output)
# continuously estimated mean:
out.l <- nrow(output)
print(output[out.l,8:9]/Tmax)
# second order moments
E2 <- output[out.l,10:12]/Tmax
print(matrix(E2[c(1,2,2,3)],2))
# second order moments
E2 <- output[out.l,10:12]/Tmax
print(matrix(E2[c(1,3,3,2)],2))
# continuously estimated mean:
out.l <- nrow(output)
print(output[out.l,8:9]/Tmax)
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/RAutoDiff/examples/hamiltonianPDP.R')
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
H.ode(c(0,0),c(-1,1))
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
H.ode(c(0,0),c(-1,1))
H.ode(c(0,0),c(-1,1))
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
mean(y)
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
sqrt(exp(3))
exp(3/2)
mean(y)
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
mean(y)
mean(output[,2])
mean(output[,3])
log(var(y))
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
mean(output[,3])
mean(y)
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
mean(output[,3])
mean(y)
mean(output[,2])
hist(output[,2])
hist(output[,3])
source('~/Dropbox/work/PDP_HMC/riemannian/R-prototype/proto.R')
hist(output[,3])
mean(output[,2])
mean(y)
plot(output[,2],output[,3],type="l")
mean(output[,2])
sd(output[,2])
hist(output[,3])
hist(output[,2])
install.packages("pandoc")
setwd("~/Dropbox/work/RAutoDiff/package/RAutoDiff")
usethis::use_vignette("introduction")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RAutoDiff)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RAutoDiff)
x <- 3.0 # value where we wish to evaluate function
x.a <- independent2(x) # set independent value (allowing for first and second derivatives)
f.a <- 0.5*x.a^2 # evaluate function (note using output of independent*() as input)
print(paste0("value of function",value(f.a)))
library(RAutoDiff)
source('~/Dropbox/work/RAutoDiff/package/RAutoDiff/R/rad.R')
library(RAutoDiff)
library(RAutoDiff)
P <- matrix(c(1,2,2,5),nrow=2) # 2x2 matrix
x <- c(1,2) # where to evaluate
x.a <- independent2(x)
f.a <- 0.5*x.a%*%P%*%x.a
print(paste0("value : ",value(f.a), " should be ",x%*%P%*%x))
print("gradient:")
print(gradient(f.a))
print("should be:")
print(P%*%x)
print("hessian:")
print(hessian(f.a))
print("should be:")
f.a
library(RAutoDiff)
library(RAutoDiff)
library(RAutoDiff)
P <- matrix(c(1,2,2,5),nrow=2) # 2x2 matrix
x <- c(1,2) # where to evaluate
x.a <- independent2(x)
f.a <- 0.5*x.a%*%P%*%x.a
print(paste0("value : ",value(f.a), " should be ",x%*%P%*%x))
print("gradient:")
print(gradient(f.a))
print("should be:")
print(P%*%x)
print("hessian:")
print(hessian(f.a))
print("should be:")
f.a
library(RAutoDiff)
library(RAutoDiff)
library(RAutoDiff)
library(RAutoDiff)
0^2
library(RAutoDiff)
source('~/Dropbox/work/RAutoDiff/package/RAutoDiff/R/rad_core.R')
library(RAutoDiff)
library(RAutoDiff)
a <- independent(c(1,2,3))
f <- a^6
f
a <- independent2(c(1,2,3))
f <- a^6
library(RAutoDiff)
a <- independent2(c(0,1,2,3))
f <- a^6
f
library(RAutoDiff)
?chol
library(RAutoDiff)
library(RAutoDiff)
dnorm
qnorm(independent(1))
library(RAutoDiff)
m
m <- matrix(independent(1:4),2)
t(m)
cholL(m)
cholL(diag(independent2(1:4)))
cholL(diag(independent2(1:3)))
t(cholL(diag(independent2(1:3))))
t(cholL(diag(independent(1:3))))
t(cholL(diag(independent(1:3))+matrix(0.1,3,3)))
chol(diag(independent(1:3))+matrix(0.1,3,3))
library(RAutoDiff)
chol(diag(independent(1:3))+matrix(0.1,3,3))
library(RAutoDiff)
A
A <- diag(independent(c(3,4,5))) + matrix(1,3,3) #SPD matrix
A
library(RAutoDiff)
solve.chol(A)
library(RAutoDiff)
unlink('vignettes/introduction_cache', recursive = TRUE)
vignette("introduction")
vignette("introduction",package = "RAutoDiff")
library(RAutoDiff)
library(RAutoDiff)
vignette("introduction",package = "RAutoDiff")
vignette("introduction",package = "RAutoDiff")
vignette("introduction",package = "RAutoDiff")
vignette("introduction",package = "RAutoDiff")
?vignette
vignette()
library(RAutoDiff)
vignette(package="RAutoDiff")
devtools::build(vignettes = TRUE)
library(RAutoDiff)
x <- independent2(c(1,2))
f <- sum(x^2)/2
f
f <- exp(sum(x^2)/2)
f
library("RAutoDiff")
vignette("introduction")
vignette("introduction",package = "RAutoDiff")
devtools::install(build_vignettes = TRUE)
vignette("introduction",package = "RAutoDiff")
vignette("introduction",package = "RAutoDiff")
vignette(package="RAutoDiff")
vignette("introduction",package="RAutoDiff")
usethis::use_vignette("functions")
?erf
library(RAutoDiff)
vignette("introduction",package="RAutoDiff")
devtools::install(build_vignettes = TRUE)
vignette("introduction",package="RAutoDiff")
vignette("functions",package="RAutoDiff")
devtools::install(build_vignettes = TRUE)
library(RAutoDiff)
library(RAutoDiff)
A <- diag(independent2(c(1,2,3)))
dim(A)
devtools::install(build_vignettes = TRUE)
?min
A <- min(independent2(c(1,2,3)))
min(independent2(c(1,2,3)))
A<-(independent2(c(1,2,3)))
A[1]>3
.AD_max_core <- function(..., na.rm=FALSE){
return(coeff(..1,which.max(..1@val)))
}
A
.AD_max_core(A)
.AD_max_core <- function(..., na.rm=FALSE){
print(nargs())
return(coeff(..1,which.max(..1@val)))
}
.AD_max_core(A)
.AD_max_core(A[1],A[2])
.AD_max_core(A[1],A[2],A[3])
.AD_max_core(A[1],A[2],A[3],3)
devtools::install_github("https://github.com/torekleppe/RAutoDiff")
vignette(package="RAutoDiff")
vignette(package="RAutoDiff")
library("RAutoDiff")
vignette(package="RAutoDiff")
devtools::install_github("https://github.com/torekleppe/RAutoDiff",build_vignettes=TRUE)
devtools::install_github("https://github.com/torekleppe/RAutoDiff",build_vignettes=TRUE,force=TRUE)
devtools::install_github("https://github.com/torekleppe/RAutoDiff",build_vignettes=TRUE)
vignette("introduction",package="RAutoDiff")
vignette("functions",package="RAutoDiff")
vignette("introduction",package="RAutoDiff")
?poly
ls(poly)
poly
?polym
polym
poly
?lm
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
fit
poly(0,0,coefs = fit$coefficients)
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
?poly
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
fit
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
out
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
out
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
setwd("~/Dropbox/work/RAutoDiff/examples")
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
fit
?predict
predict()
predict
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
x
y
z
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
out
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
out
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
pred <- predict(fit,x=1,y=2)
pred
?predict
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
source('~/Dropbox/work/RAutoDiff/examples/poly.R')
pred
?deSolve
??deSolve
devtools::install_github("https://github.com/torekleppe/RAutoDiff",build_vignettes=TRUE)
setwd("~/Dropbox/work/PDP_HMC/DP_proto")
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
out
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
out
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
out
out$x_high-out$x_low
print(out$x_high - exp(-t/10)*x0)
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
denseWts(0)
denseWts(1)
denseWts(1)
denseWts(0)
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
dp45DenseDot(step,0.1)
dp45DenseDot(ot,0.1)
dp45DenseDot(out,0.1)
ff(out$x_high)
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
dp45DenseDot(out,0.1)
ff(out$x_high)
source('~/Dropbox/work/PDP_HMC/DP_proto/DP_proto.R')
ff(out$x_high)
dp45DenseDot(out,0.1)
dp45DenseDot(out,0.0)
ff(x0)
